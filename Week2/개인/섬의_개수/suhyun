import sys
si = sys.stdin.readline
sys.setrecursionlimit(10000)
dir = [[0,1],[1,0],[0,-1],[-1,0],[-1,-1],[-1,1],[1,1],[1,-1]]

def dfs(x, y):
    adj[x][y] = 0
    for dx, dy in dir:
        nx = x + dx
        ny = y + dy
        if nx < 0 or ny < 0 or nx >= h or ny >= w:
            continue
        if adj[nx][ny] == 1:
            dfs(nx, ny)
            

while True:
    w, h = map(int, si().split())
    if w == 0 and h == 0:
        break
    
    adj = [[0] * w for _ in range(h)]
    for x in range(h):
        arr = list(map(int, si().split()))
        for j, y in enumerate(arr):
            adj[x][j] = y
    
    ans = 0
    for x in range(h):
        for y in range(w):
            if adj[x][y] == 1:
                dfs(x,y)
                ans += 1
    print(ans)